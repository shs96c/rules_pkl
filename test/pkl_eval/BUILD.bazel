load("//pkl:defs.bzl", "pkl_eval", "pkl_library")

pkl_eval(
    name = "pkl_eval_with_src_dep",
    srcs = [
        "srcs/pets.pkl",
        "srcs/pets_override.pkl",
    ],
    entrypoints = ["srcs/pets_override.pkl"],
)

sh_test(
    name = "pkl_eval_with_src_dep_test",
    srcs = ["verify_generated_pkl.sh"],
    args = [
        "expected/pets.pcf",
        "pkl_eval_with_src_dep/pkl_eval_with_src_dep.pcf",
    ],
    data = [
        "expected/pets.pcf",
        ":pkl_eval_with_src_dep",
    ],
)

pkl_library(
    name = "pets_pkl_lib",
    srcs = ["srcs/pets.pkl"],
)

pkl_eval(
    name = "pkl_eval_with_lib_dep",
    srcs = [
        "srcs/pets_override.pkl",
    ],
    entrypoints = ["srcs/pets_override.pkl"],
    deps = [":pets_pkl_lib"],
)

sh_test(
    name = "pkl_eval_with_lib_dep_test",
    srcs = ["verify_generated_pkl.sh"],
    args = [
        "expected/pets.pcf",
        "pkl_eval_with_lib_dep/pkl_eval_with_lib_dep.pcf",
    ],
    data = [
        "expected/pets.pcf",
        ":pkl_eval_with_lib_dep",
    ],
)

pkl_eval(
    name = "pkl_eval_with_ext_lib_dep",
    srcs = ["srcs/pets_with_ext_lib_dep.pkl"],
    deps = ["//test/pkl_eval/srcs/foo:my_pets"],
)

sh_test(
    name = "pkl_eval_with_ext_lib_dep_test",
    srcs = ["verify_generated_pkl.sh"],
    args = [
        "expected/pets.pcf",
        "pkl_eval_with_ext_lib_dep/pkl_eval_with_ext_lib_dep.pcf",
    ],
    data = [
        "expected/pets.pcf",
        ":pkl_eval_with_ext_lib_dep",
    ],
)

pkl_eval(
    name = "pkl_eval_without_out",
    srcs = ["srcs/simple.pkl"],
)

pkl_eval(
    name = "pkl_eval_with_out",
    srcs = ["srcs/simple.pkl"],
    outs = ["helloworld.pcf"],
)

pkl_eval(
    name = "pkl_eval_multiple_with_outs",
    srcs = [
        "srcs/multiple_outputs.pkl",
    ],
    outs = [
        "cars/fiat.yaml",
        "vans/ford.json",
    ],
    multiple_outputs = True,
)

pkl_eval(
    name = "pkl_eval_multiple_without_outs",
    srcs = [
        "srcs/multiple_outputs.pkl",
    ],
    multiple_outputs = True,
)

sh_test(
    name = "pkl_eval_multiple_with_outputs_test",
    srcs = ["verify_pkl_eval_output.sh"],
    args = [
        "multiple_outputs_specified",
    ],
    data = [
        "expected/multiple_outputs_specified.txt",
        ":pkl_eval_multiple_with_outs",
    ],
)

sh_test(
    name = "pkl_eval_multiple_without_outputs_test",
    srcs = ["verify_pkl_eval_output.sh"],
    args = [
        "multiple_outputs_not_specified",
    ],
    data = [
        "expected/multiple_outputs_not_specified.txt",
        ":pkl_eval_multiple_without_outs",
    ],
)

sh_test(
    name = "pkl_eval_with_outs_test",
    srcs = ["verify_pkl_eval_output.sh"],
    args = ["single_output_specified"],
    data = [
        "expected/single_output_specified.txt",
        ":pkl_eval_with_out",
    ],
)

sh_test(
    name = "pkl_eval_without_outs_test",
    srcs = ["verify_pkl_eval_output.sh"],
    args = ["single_output_not_specified"],
    data = [
        "expected/single_output_not_specified.txt",
        ":pkl_eval_without_out",
    ],
)

pkl_eval(
    name = "pets_without_rabbit",
    srcs = ["srcs/animals.pkl"],
    expression = "animals.filter((x) -> x != \"bird\")",
)

sh_test(
    name = "pkl_eval_with_expression_test",
    srcs = ["verify_generated_pkl.sh"],
    args = [
        "expected/filtered_animals.pcf",
        "pets_without_rabbit/pets_without_rabbit.pcf",
    ],
    data = [
        "expected/filtered_animals.pcf",
        ":pets_without_rabbit",
    ],
)
